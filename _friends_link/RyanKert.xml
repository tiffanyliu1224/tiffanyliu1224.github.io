<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ryan&#39;s blog</title>
  
  
  <link href="https://blog.ryankert.cc/atom.xml" rel="self"/>
  
  <link href="https://blog.ryankert.cc/"/>
  <updated>2022-07-23T13:14:39.835Z</updated>
  <id>https://blog.ryankert.cc/</id>
  
  <author>
    <name>Ryan Kert</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Switching to Hexo!</title>
    <link href="https://blog.ryankert.cc/2022/07/23/hello-world/"/>
    <id>https://blog.ryankert.cc/2022/07/23/hello-world/</id>
    <published>2022-07-23T13:14:39.835Z</published>
    <updated>2022-07-23T13:14:39.835Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Why"><a href="#Why" class="headerlink" title="Why?"></a>Why?</h2><p>I was priviously using jekyll TeXt theme, but the code block shows too small to watch code. Also, I don’t really understand the coding language jekyll is using, so I decide to switch to a more familier javascript framework, hexo.</p><h2 id="What-is-Hexo"><a href="#What-is-Hexo" class="headerlink" title="What is Hexo?"></a>What is Hexo?</h2><p>Hexo is a website generator to generate website based on Markdown file, and it is highly customizable.</p><h2 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h2><p>Preriquisite: <code>Git</code> and <code>node.js</code>.</p><h2 id="Install-Hexo-CLI"><a href="#Install-Hexo-CLI" class="headerlink" title="Install Hexo CLI"></a>Install Hexo CLI</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>and, we can execute Hexo commands in this way:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx hexo &lt;<span class="built_in">command</span>&gt;</span><br></pre></td></tr></table></figure><p><strong>Install Starter Package &amp; Dependencies</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npx hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h2 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h2><p>Run these commands, and you will see a starter website is generated by Hexo.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npx hexo g</span><br><span class="line">npx hexo s</span><br></pre></td></tr></table></figure><h2 id="Writing"><a href="#Writing" class="headerlink" title="Writing"></a>Writing</h2><p>In <code>sourse/__post</code> folder, we already have a <code>hello-world.md</code> post that is from Hexo starter package. Basically, we can imitate that first.</p><p>For detail Infomation, visit <a href="https://hexo.io/docs/front-matter">Hexo Doc front-matter</a></p><h3 id="Example"><a href="#Example" class="headerlink" title="Example:"></a>Example:</h3><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Switching to Hexo!</span><br><span class="line">tags: [Hexo]</span><br><span class="line"><span class="section">categories: [Static Website Generator]</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br><span class="line"><span class="section"># header</span></span><br><span class="line"></span><br><span class="line">your blog post</span><br></pre></td></tr></table></figure><h2 id="Theme"><a href="#Theme" class="headerlink" title="Theme"></a>Theme</h2><p>You can search for theme you like on <a href="https://hexo.io/themes/">This Site</a> or Github, but in hexo, I will generally recommand <code>next</code>. It’s not only because it’s highly customizable, but for its already built nice plugins.</p><h2 id="Deploy"><a href="#Deploy" class="headerlink" title="Deploy"></a>Deploy</h2><p>Use</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx hexo g</span><br></pre></td></tr></table></figure><p>It will generate html file that you might want to deploy to github in <code>pulic</code> directory, and you can use Github Pages to handle that.</p><p><a href="https://pages.github.com/">Github Pages Tutorial</a></p><h2 id="Auto-Deploy-with-Github-Actions"><a href="#Auto-Deploy-with-Github-Actions" class="headerlink" title="Auto Deploy with Github Actions"></a>Auto Deploy with Github Actions</h2><p>Baically, you might find it annoying to generate <code>html</code> file everytime you want to make a change. Github can handle that for me.</p><ol><li>Uplaod your whole project to Github.</li><li>add a file to your repository, <code>.github/workflows/deploy.yml</code></li></ol><p><strong>.github&#x2F;workflows&#x2F;deploy.yml</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Pages</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span> <span class="comment"># default branch</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">pages:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">16.</span><span class="string">x</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;16&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">NPM</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.OS</span> <span class="string">&#125;&#125;-npm-cache</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">github_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">          <span class="attr">cname:</span> <span class="comment"># if you use custom domain, enter your hosting domain for this project.</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Why&quot;&gt;&lt;a href=&quot;#Why&quot; class=&quot;headerlink&quot; title=&quot;Why?&quot;&gt;&lt;/a&gt;Why?&lt;/h2&gt;&lt;p&gt;I was priviously using jekyll TeXt theme, but the code block sho</summary>
      
    
    
    
    <category term="Static Website Generator" scheme="https://blog.ryankert.cc/categories/Static-Website-Generator/"/>
    
    
    <category term="Hexo" scheme="https://blog.ryankert.cc/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Youtube Thumbnail Scraping</title>
    <link href="https://blog.ryankert.cc/2022/04/20/youtube-thumbnail-scraping/"/>
    <id>https://blog.ryankert.cc/2022/04/20/youtube-thumbnail-scraping/</id>
    <published>2022-04-20T20:46:25.000Z</published>
    <updated>2022-07-23T13:14:39.835Z</updated>
    
    <content type="html"><![CDATA[<p>To crawl thumbnails on YouTube, we use a interesting website that YouTube made for us for quick request for thumnail image.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://i.ytimg.com/vi/&#123;YouTube_video_id&#125;/maxresdefault.jpg</span><br></pre></td></tr></table></figure><p>Firstly, we convert YouTube url to id by following code, and use “get” methed request the image.</p><p>Then, we stored the image in folder you like<br>using <code>imagedown(YouTube_video_id, &#39;folder_name&#39;)</code></p><p>If there’s no such folder, then it will auto generate a new one.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment">#urls to id</span></span><br><span class="line">url = <span class="string">&quot;YouTube URL&quot;</span></span><br><span class="line">exp = <span class="string">&quot;^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&amp;?]*).*&quot;</span></span><br><span class="line">s = re.findall(exp,url)[<span class="number">0</span>][-<span class="number">1</span>]</span><br><span class="line">thumbnail = <span class="string">f&quot;https://i.ytimg.com/vi/<span class="subst">&#123;s&#125;</span>/maxresdefault.jpg&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#image scraping</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">imagedown</span>(<span class="params">url, folder</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        os.mkdir(os.path.join(os.getcwd(), folder))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    os.chdir(os.path.join(os.getcwd(), folder))</span><br><span class="line"></span><br><span class="line">    name = url</span><br><span class="line">    link = url</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(name.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;-&#x27;</span>).replace(<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;&#x27;</span>) + <span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        im = requests.get(link)</span><br><span class="line">        f.write(im.content)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Writing: &#x27;</span>, name)</span><br><span class="line"></span><br><span class="line">imagedown(thumbnail, <span class="string">&#x27;image&#x27;</span>)</span><br></pre></td></tr></table></figure><p>Credits: <a href="https://stackoverflow.com/questions/47730259/installing-urllib-in-python3-6">StackoverFlow</a> and <a href="https://github.com/jhnwr">jhnwr</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;To crawl thumbnails on YouTube, we use a interesting website that YouTube made for us for quick request for thumnail image.&lt;/p&gt;
&lt;figure c</summary>
      
    
    
    
    <category term="Scraping" scheme="https://blog.ryankert.cc/categories/Scraping/"/>
    
    
    <category term="Scraping" scheme="https://blog.ryankert.cc/tags/Scraping/"/>
    
  </entry>
  
  <entry>
    <title>Download Google font and use it in offline html</title>
    <link href="https://blog.ryankert.cc/2022/04/18/google-font-offline/"/>
    <id>https://blog.ryankert.cc/2022/04/18/google-font-offline/</id>
    <published>2022-04-18T20:46:25.000Z</published>
    <updated>2022-07-23T13:14:39.835Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Download-Google-font-and-use-it-in-offline-html"><a href="#Download-Google-font-and-use-it-in-offline-html" class="headerlink" title="Download Google font and use it in offline html"></a>Download Google font and use it in offline html</h2><p><strong>Steps required</strong></p><ol><li>find your beloved font at google fonts.</li><li>select all font styles that you might want to have.</li><li>find its’ url ex:<code>https://fonts.googleapis.com/css2?family=Caveat:wght@400;500;600;700&amp;display=swap</code>, which will be in<code>To embed a font, copy the code into the &lt;head&gt; of your html</code>&#x2F;<code>&lt;link&gt;</code></li><li>open it in the browser and convert it to <code>example.css</code></li><li>make a directory “fonts” ex:<code>mkdir fonts</code></li><li>make a <code>main.py</code> in same directory.</li><li>paste the automate python code in it.</li><li>comfirm that this directory has three object:<ul><li><input disabled="" type="checkbox"> <code>main.py</code></li><li><input disabled="" type="checkbox"> empty directory <code>fonts</code></li><li><input disabled="" type="checkbox"> <code>example.css</code></li></ul></li><li>run the python code <code>python main.py</code></li><li>embed <code>example.css</code> in your html file</li></ol><p><strong><code>main.py</code></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;example.css&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    text = f.read()</span><br><span class="line">    urls = re.findall(<span class="string">r&#x27;(https?://[^\)]+)&#x27;</span>, text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">    filename = url.split(<span class="string">&quot;/&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./fonts/&quot;</span> + filename, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(r.content)</span><br><span class="line">    text = text.replace(url, <span class="string">&quot;&#x27;./fonts/&quot;</span> + filename +<span class="string">&quot;&#x27;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;example.css&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(text)</span><br></pre></td></tr></table></figure><p>credit: <strong>duydb</strong>, <strong>Wytamma Wirth</strong> and <strong>me</strong> who modified it to the better</p><p>resourse: <a href="https://stackoverflow.com/questions/15930003/downloading-a-google-font-and-setting-up-an-offline-site-that-uses-it">https://stackoverflow.com/questions/15930003/downloading-a-google-font-and-setting-up-an-offline-site-that-uses-it</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Download-Google-font-and-use-it-in-offline-html&quot;&gt;&lt;a href=&quot;#Download-Google-font-and-use-it-in-offline-html&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    <category term="google-font" scheme="https://blog.ryankert.cc/categories/google-font/"/>
    
    
    <category term="google-font" scheme="https://blog.ryankert.cc/tags/google-font/"/>
    
  </entry>
  
</feed>
