<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[Stories by 阿姆 The Program Beginner on Medium]]></title>
        <description><![CDATA[Stories by 阿姆 The Program Beginner on Medium]]></description>
        <link>https://medium.com/@AmuAstra?source=rss-ebd4814c8620------2</link>
        <image>
            <url>https://cdn-images-1.medium.com/fit/c/150/150/1*tgnDjqCurili8ZVaIlXhIg.jpeg</url>
            <title>Stories by 阿姆 The Program Beginner on Medium</title>
            <link>https://medium.com/@AmuAstra?source=rss-ebd4814c8620------2</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Wed, 01 Feb 2023 19:05:18 GMT</lastBuildDate>
        <atom:link href="https://medium.com/@AmuAstra/feed" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <atom:link href="http://medium.superfeedr.com" rel="hub"/>
        <item>
            <title><![CDATA[#6 骰子轉轉轉]]></title>
            <link>https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4/6-%E9%AA%B0%E5%AD%90%E8%BD%89%E8%BD%89%E8%BD%89-f4064ef85ea9?source=rss-ebd4814c8620------2</link>
            <guid isPermaLink="false">https://medium.com/p/f4064ef85ea9</guid>
            <category><![CDATA[learning-to-code]]></category>
            <category><![CDATA[ios-app-development]]></category>
            <category><![CDATA[swift]]></category>
            <dc:creator><![CDATA[阿姆 The Program Beginner]]></dc:creator>
            <pubDate>Fri, 12 Aug 2022 17:57:09 GMT</pubDate>
            <atom:updated>2022-08-13T12:01:51.800Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/620/1*4CtNhcfkWNqulvRkggP78A.gif" /></figure><p>這次用上了有點複雜的迴圈，感受到了 swift 應用難度漸漸加深的感覺，fight!!</p><blockquote>程式</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*MfeqtM8sa0Z9olki6eNarw.png" /></figure><p><strong>(1) 拉左邊骰子及右邊骰子的 Outlet，選擇 Outlet Collection 可以將三顆骰子拉在同一個 Outlet 上，好讓變數少一點、畫面簡潔一點</strong></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/598/1*fi6YqoXpRr72dEXdKKusQQ.png" /></figure><p>同時設左邊骰子及右邊骰子的初始值，這樣點左邊的按鈕時，才可以再加上右邊的總和，這邊因為圖片擺設的關係並沒有將其設為0</p><pre><strong>var</strong> leftSum = 9</pre><pre><strong>var</strong> rightSum = 12</pre><p><strong>(2) 拉左右按鈕的 Action，並將 Sum 歸零，使用 for in 迴圈完成三顆亂數骰子的加總</strong></p><pre>leftSum = 0</pre><pre><strong>for</strong> i <strong>in</strong> 0..&lt;leftDiceImegeViews.count {</pre><pre><strong>let</strong> number = Int.random(in: 1...6)</pre><pre>leftSum += number</pre><pre>leftDiceImegeViews[i].image = UIImage(named: &quot;\(number)&quot;)</pre><pre>}</pre><p>宣告一個 number 儲存亂數，使 Sum = Sum + number，循環次數為 0..&lt;leftDiceImegeViews.count ( 3 次)，成功使三顆隨機的骰子數加總起來，並打上 ImegeViews 讓骰子圖片變換能夠正常顯示</p><p><strong>(3) 讓加總的文字顯示</strong></p><pre>leftSumLabel.text = &quot;\(leftSum)&quot;</pre><pre>allSumLabel.text = &quot;\(leftSum + rightSum)&quot;</pre><p>最重要的一步是在左右兩邊骰子的 Action 同時加上 allSumLabel 這段，才能讓一邊在轉動時，即使另一邊沒有轉動，六顆骰子的加總數字也能正確</p><p># GitHub</p><p><a href="https://github.com/korudo164/Dice">GitHub - korudo164/Dice</a></p><p># 參考文章</p><ul><li><a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84%E8%A9%A6%E7%85%89-%E5%8B%87%E8%80%85%E7%9A%84-100-%E9%81%93-swift-ios-app-%E8%AC%8E%E9%A1%8C/48-%E9%AA%B0%E5%AD%90%E8%BD%89%E8%BD%89%E8%BD%89%E5%92%8C%E9%AA%B0%E5%AD%90%E5%90%B9%E7%89%9B-69368b4e8382">#48 骰子轉轉轉 &amp; 骰子吹牛</a></li><li><a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4/%E9%AA%B0%E5%AD%90%E8%BD%89%E8%BD%89%E8%BD%89-app-2a4e01954b5d">骰子轉轉轉 APP</a></li></ul><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=f4064ef85ea9" width="1" height="1" alt=""><hr><p><a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4/6-%E9%AA%B0%E5%AD%90%E8%BD%89%E8%BD%89%E8%BD%89-f4064ef85ea9">#6 骰子轉轉轉</a> was originally published in <a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4">彼得潘的 Swift iOS App 開發教室</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[#5 再次替布丁狗換個背景色吧]]></title>
            <link>https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4/5-%E5%86%8D%E6%AC%A1%E6%9B%BF%E5%B8%83%E4%B8%81%E7%8B%97%E6%8F%9B%E5%80%8B%E8%83%8C%E6%99%AF%E8%89%B2%E5%90%A7-359eb959e908?source=rss-ebd4814c8620------2</link>
            <guid isPermaLink="false">https://medium.com/p/359eb959e908</guid>
            <category><![CDATA[ios-app-development]]></category>
            <category><![CDATA[learn-to-code]]></category>
            <category><![CDATA[swift]]></category>
            <dc:creator><![CDATA[阿姆 The Program Beginner]]></dc:creator>
            <pubDate>Tue, 09 Aug 2022 03:11:46 GMT</pubDate>
            <atom:updated>2022-08-09T08:14:31.096Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/606/1*rNvkJdRvTZUQwL0AdFYIOQ.gif" /></figure><blockquote>程式</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*RnUkIpmRd8AFNJ__VhTs0w.png" /></figure><p><strong>(1) 將畫面佈置完畢後，把各個元件命名好並拉 outlet 到 func 前面</strong></p><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> pudinImageView: UIImageView!</pre><pre>//Slider</pre><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> redSlider: UISlider!</pre><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> greenSlider: UISlider!</pre><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> blueSlider: UISlider!</pre><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> alphaSlider: UISlider!</pre><pre>//Label</pre><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> redLabel: UILabel!</pre><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> greenLabel: UILabel!</pre><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> blueLabel: UILabel!</pre><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> alphaLabel: UILabel!</pre><pre>//switch</pre><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> redSwitch: UISwitch!</pre><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> greenSwitch: UISwitch!</pre><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> blueSwitch: UISwitch!</pre><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> alphaSwitch: UISwitch!</pre><p><strong>(2) 把四條 Slider 拉到同一個 Action</strong></p><pre><strong>@IBAction</strong> <strong>func</strong> changeColor(_ sender: UISlider) {</pre><pre>pudinImageView.backgroundColor = UIColor(red: CGFloat(redSlider.value), green: CGFloat(greenSlider.value), blue: CGFloat(blueSlider.value), alpha: CGFloat(alphaSlider.value))</pre><pre><strong>if</strong> sender == redSlider{</pre><pre>redLabel.text = String(format: &quot;%.2f&quot;, sender.value)</pre><pre>} <strong>else</strong> <strong>if</strong> sender == greenSlider {</pre><pre>greenLabel.text = String(format: &quot;%.2f&quot;, sender.value)</pre><pre>} <strong>else</strong> <strong>if</strong> sender == blueSlider {</pre><pre>blueLabel.text = String(format: &quot;%.2f&quot;, sender.value)</pre><pre>} <strong>else</strong> <strong>if</strong> sender == alphaSlider {</pre><pre>alphaLabel.text = String(format: &quot;%.2f&quot;, sender.value)</pre><pre>}</pre><pre>}</pre><p>sender 設為 UISlider，後面就不用把每個顏色的 Slider 名字都寫一遍</p><p>並且，%.2f 是小數點後兩位的意思</p><p><strong>(3) 把四個 Switch 拉到同一個 Action 裡</strong></p><pre><strong>@IBAction</strong> <strong>func</strong> switchTap(_ sender: UISwitch) {</pre><pre><strong>switch</strong> sender {</pre><pre><strong>case</strong> redSwitch:</pre><pre>redSlider.isEnabled = sender.isOn</pre><pre><strong>case</strong> greenSwitch:</pre><pre>greenSlider.isEnabled = sender.isOn</pre><pre><strong>case</strong> blueSwitch:</pre><pre>blueSlider.isEnabled = sender.isOn</pre><pre><strong>case</strong> alphaSwitch:</pre><pre>alphaSlider.isEnabled = sender.isOn</pre><pre><strong>default</strong>:</pre><pre><strong>break</strong></pre><pre>}</pre><pre>}</pre><blockquote>備註</blockquote><ul><li>if else：當條件成立的時候會執行其陳述式裡的程式，而不成立時則執行另外一個陳述式。</li><li>switch case：括號內放入表達式，接著就會表達式裡的值是否符合case條件，然後再執行此條件相關的陳述式。</li></ul><p>論結果，基於易讀性及效能，在大型專案需要越大量、複雜且無需比較的判斷時，越多數會選擇 switch；相反地，若只是簡單的少數且需要比較的判斷，if else 反而會比較直觀。</p><p># GitHub</p><p><a href="https://github.com/korudo164/ChangeColor">GitHub - korudo164/ChangeColor</a></p><p>#參考文章</p><ul><li><a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84%E8%A9%A6%E7%85%89-%E5%8B%87%E8%80%85%E7%9A%84-100-%E9%81%93-swift-ios-app-%E8%AC%8E%E9%A1%8C/%E8%AA%BF%E8%89%B2%E5%A4%A7%E5%B8%AB-swift-ios-app-%E4%BD%9C%E6%A5%AD-a8ab4d968034">#13 彼得潘的影子 — 調色大師</a></li><li><a href="https://medium.com/@sunnyhuang.sc/%E6%8A%80%E8%A1%93%E7%AD%86%E8%A8%98-javascript-if-else-switch-%E5%B7%AE%E7%95%B0-337a910763f6">[ 技術筆記 ] JavaScript｜if… else… / switch 差異</a></li><li><a href="https://jameshsu0407.github.io/blog/20211023_if-else_switch-case/">[教學]if else與switch case的比較</a></li></ul><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=359eb959e908" width="1" height="1" alt=""><hr><p><a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4/5-%E5%86%8D%E6%AC%A1%E6%9B%BF%E5%B8%83%E4%B8%81%E7%8B%97%E6%8F%9B%E5%80%8B%E8%83%8C%E6%99%AF%E8%89%B2%E5%90%A7-359eb959e908">#5 再次替布丁狗換個背景色吧</a> was originally published in <a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4">彼得潘的 Swift iOS App 開發教室</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[#4 使用 page concrol、segmented conctol、button及swipe gesture recognizer 更換專輯內容]]></title>
            <link>https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4/4-%E4%BD%BF%E7%94%A8-page-concrol-segmented-conctol-button%E5%8F%8Aswipe-gesture-recognizer-%E6%9B%B4%E6%8F%9B%E5%B0%88%E8%BC%AF%E5%85%A7%E5%AE%B9-d4be11c6a59?source=rss-ebd4814c8620------2</link>
            <guid isPermaLink="false">https://medium.com/p/d4be11c6a59</guid>
            <category><![CDATA[learning-to-code]]></category>
            <category><![CDATA[ios-app-development]]></category>
            <category><![CDATA[swift]]></category>
            <dc:creator><![CDATA[阿姆 The Program Beginner]]></dc:creator>
            <pubDate>Sun, 31 Jul 2022 16:06:54 GMT</pubDate>
            <atom:updated>2022-08-01T02:54:41.984Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/696/1*RJ-gQsldKOn2sOMB0qKn2w.gif" /></figure><blockquote>程式</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*8Y4FCO8vxU3LwOwG5biZpQ.png" /></figure><p>這次使用了以下元件來切換顯示五月天專輯</p><ul><li>Segment Control：切換類別</li><li>Page Control：小圓點</li><li>Prev Button、Next Button：上一個/下一個</li><li>Swipe Gesture Recognizer：左右滑動圖片</li></ul><p><strong>(1) 佈置畫面</strong></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*aMJ5G5ytGr0zKJ-XyIWepw.png" /></figure><p><strong>(2) 運用陣列 Array 儲存專輯跟歌詞的資料</strong></p><pre><strong>let</strong> albums = [&quot;成名在望&quot;, &quot;玫瑰少年&quot;, &quot;頑固&quot;]</pre><pre><strong>let</strong> lyrics = [</pre><pre>&quot;&quot;&quot;</pre><pre>那黑的終點可有光 那夜的盡頭可會亮</pre><pre>那成名在望 會有希望 或者是 無知的狂妄</pre><pre>那又會怎麼樣 「那又會怎麼樣？」</pre><pre>混跡過酒場的駐唱 才讀懂人性的尋常</pre><pre>背負過音樂節的重量 才體會每場仗</pre><pre>都仰賴 槍與糧</pre><pre>夢是把熱血和 汗與淚 熬成湯</pre><pre>澆灌在乾涸的 貧瘠的 現實上</pre><pre>當日常的重量 讓我們 不反抗</pre><pre>倒地後才發現 荒地上 渺茫 希望 綻放</pre><pre>&quot;&quot;&quot;,</pre><pre>&quot;&quot;&quot;</pre><pre>哪朵玫瑰 沒有荊棘</pre><pre>最好的 報復是 美麗</pre><pre>最美的 盛開是 反擊</pre><pre>別讓誰去 改變了你</pre><pre>你是你 或是妳 都行</pre><pre>會有人 全心的 愛你</pre><pre>玫瑰少年 在我心裡</pre><pre>綻放著 鮮豔的 傳奇</pre><pre>我們都 從來沒 忘記</pre><pre>你的控訴 沒有聲音</pre><pre>卻傾訴 更多的 真理</pre><pre>卻喚醒 無數的 真心</pre><pre>&quot;&quot;&quot;,</pre><pre>&quot;&quot;&quot;</pre><pre>一次一次你 吞下了淚滴</pre><pre>一次一次 拼回破碎自己</pre><pre>一天一天你 是否還相信</pre><pre>活在你心深處 那頑固自己</pre><pre>你追逐 你呼吸 你囂張 的任性</pre><pre>鼻青臉腫的哭過 若無其事的忘記</pre><pre>如果你 能預知 這條路 的陷阱</pre><pre>我想你 依然錯得很過癮</pre><pre>&quot;&quot;&quot;</pre><pre>]</pre><p><strong>(3) 定義一個起始值為 0 的變數來顯示陣列的順序，並將 ImageView、lyricsLabel、Segmented Control 及 Page Control 拉 Outlet 出來</strong></p><pre>//定義一個變數以利後續作業</pre><pre><strong>var</strong> index = 0<br></pre><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> albumImageView: UIImageView!</pre><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> lyricsLabel: UILabel!</pre><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> albumSegmentedControl: UISegmentedControl!</pre><pre><strong>@IBOutlet</strong> <strong>weak</strong> <strong>var</strong> albumPageControl: UIPageControl!</pre><p><strong>(4) 建立一個function定義同步改變的內容</strong></p><pre>//設一個function好把重複的指令包起來之後再代入</pre><pre><strong>func</strong> updateUI() {</pre><pre>albumImageView.image = UIImage(named: albums[index])</pre><pre>lyricsLabel.text = lyrics[index]</pre><pre>albumSegmentedControl.selectedSegmentIndex = index</pre><pre>albumPageControl.currentPage = index</pre><pre>}</pre><p><strong>(5)</strong> <strong>將Segmented Control、Page Control 及 Button 拉 Action 出來，並將先前寫的 updateUI function 代入</strong></p><pre>//Segment設定</pre><pre><strong>@IBAction</strong> <strong>func</strong> selectAlbum(_ sender: <strong>Any</strong>) {</pre><pre>index = albumSegmentedControl.selectedSegmentIndex</pre><pre>updateUI()</pre><pre>}</pre><pre>//Page Control設定</pre><pre><strong>@IBAction</strong> <strong>func</strong> changePageControl(_ sender: <strong>Any</strong>) {</pre><pre>index = albumPageControl.currentPage</pre><pre>updateUI()</pre><pre>}</pre><pre>//左Button設定</pre><pre><strong>@IBAction</strong> <strong>func</strong> pre(_ sender: <strong>Any</strong>) {</pre><pre>index -= 1</pre><pre><strong>if</strong> index &lt; 0 {</pre><pre>index = albums.count - 1</pre><pre>}</pre><pre>updateUI()</pre><pre>}</pre><pre>//右Button設定</pre><pre><strong>@IBAction</strong> <strong>func</strong> next(_ sender: <strong>Any</strong>) {</pre><pre>index += 1</pre><pre><strong>if</strong> index == albums.count {</pre><pre>index = 0</pre><pre>}</pre><pre>updateUI()</pre><pre>}</pre><p>Button 可以用餘數的寫法會更簡便，這邊還未學到所以僅先附上</p><pre>//用餘數的方式</pre><pre>//index = (index + 1) % albums.count</pre><p><strong>(6) 將 ImageView 套上 Swipe Gesture Recognizer 滑動手勢</strong></p><p>左滑跟右滑都需要判斷，所以這邊加入兩個，屬性欄位一個選 Left ，一個選 Right</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/522/1*eJX2zuPGxglhH08EzdXE4Q.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/518/1*KviVZD7Ehbh5dWo33uNyrA.png" /></figure><p>正常 ImageView 是不能點選的，為了讓他能夠被滑動，我們需要將 User Interaction Enabled打開</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/516/1*IJOqzswr9bjwBwTGX79Ivw.png" /></figure><p>將 Swipe Gesture 拉 Action 出來，並將先前寫的 updateUI function 代入</p><pre>//Swipe圖片左右滑動設定</pre><pre><strong>@IBAction</strong> <strong>func</strong> changePage(_ sender: UISwipeGestureRecognizer) {</pre><pre><strong>if</strong> sender.direction == .left {</pre><pre>index += 1</pre><pre><strong>if</strong> index == albums.count {</pre><pre>index = 0</pre><pre>}</pre><pre>updateUI()</pre><pre>} <strong>else</strong> <strong>if</strong> sender.direction == .right {</pre><pre>index -= 1</pre><pre><strong>if</strong> index &lt; 0 {</pre><pre>index = albums.count - 1</pre><pre>}</pre><pre>updateUI()</pre><pre>}</pre><pre>}</pre><p>#GitHub</p><p><a href="https://github.com/korudo164/DemoAlbum">GitHub - korudo164/DemoAlbum</a></p><p>#教學文章</p><p><a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84%E8%A9%A6%E7%85%89-%E5%8B%87%E8%80%85%E7%9A%84-100-%E9%81%93-swift-ios-app-%E8%AC%8E%E9%A1%8C/%E7%9C%9F%E6%84%9B%E7%9A%84%E6%A8%A1%E6%A8%A3-image-view-%E5%92%8C-segmented-control-%E7%B7%B4%E7%BF%92-675d64d5c94c">#38 利用 page control，segmented control，button &amp; gesture 更換內容</a></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=d4be11c6a59" width="1" height="1" alt=""><hr><p><a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4/4-%E4%BD%BF%E7%94%A8-page-concrol-segmented-conctol-button%E5%8F%8Aswipe-gesture-recognizer-%E6%9B%B4%E6%8F%9B%E5%B0%88%E8%BC%AF%E5%85%A7%E5%AE%B9-d4be11c6a59">#4 使用 page concrol、segmented conctol、button及swipe gesture recognizer 更換專輯內容</a> was originally published in <a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4">彼得潘的 Swift iOS App 開發教室</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[#3 用簡單的程式做一張簡單的卡片吧]]></title>
            <link>https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4/3-%E7%94%A8%E7%B0%A1%E5%96%AE%E7%9A%84%E7%A8%8B%E5%BC%8F%E5%81%9A%E4%B8%80%E5%BC%B5%E7%B0%A1%E5%96%AE%E7%9A%84%E5%8D%A1%E7%89%87%E5%90%A7-7a3a00b68398?source=rss-ebd4814c8620------2</link>
            <guid isPermaLink="false">https://medium.com/p/7a3a00b68398</guid>
            <category><![CDATA[swift]]></category>
            <category><![CDATA[ios-app-development]]></category>
            <category><![CDATA[learning-to-code]]></category>
            <dc:creator><![CDATA[阿姆 The Program Beginner]]></dc:creator>
            <pubDate>Thu, 28 Jul 2022 07:11:28 GMT</pubDate>
            <atom:updated>2022-07-28T10:32:33.021Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*LMVyOSu_eGr1zifE-bi-XQ.png" /></figure><blockquote>程式</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*YgJTnna9GmfD-0Tyc3NOQw.png" /></figure><h4><em>(1) 設定圖片大小及顯示方式</em></h4><p><strong>frame：大小與位置</strong></p><pre>wolfImageView.frame = CGRect(x: 0, y: 0, width: 600, height: 320)</pre><pre>wolfImageView.contentMode = .scaleAspectFill</pre><p>frame的長寬設定的與原圖片不同，會造成圖片變形，所以這邊contentMode我們設定scaleAspectFill，維持比例並填滿frame，超出的部分截掉。</p><h4><em>(2) 設定文字</em></h4><pre><strong>let</strong> messageLabel = UILabel(frame: CGRect(x: 100, y: 110, width: 200, height: 50))</pre><pre>messageLabel.text = &quot;Grrrrrrr&quot;</pre><pre>messageLabel.textColor = UIColor(red: 0, green: 0, blue: 0, alpha: 1)</pre><pre>messageLabel.font = UIFont.systemFont(ofSize: 60)</pre><pre>wolfImageView.addSubview(messageLabel)</pre><h4><em>(3) 設定邊框寬度、邊框顏色及圓角的CALayer</em></h4><ul><li><strong>邊框寬度：borderWidth</strong></li><li><strong>圓角：cornerRadius</strong></li></ul><pre>wolfImageView.layer.borderWidth = 20</pre><pre>wolfImageView.layer.borderColor = CGColor(red: 1, green: 1, blue: 1, alpha: 1)</pre><pre>wolfImageView.layer.cornerRadius = 50</pre><pre>wolfImageView.clipsToBounds = <strong>true</strong></pre><p>若要顯示圓角，clipsToBounds要設定成true。</p><h4>(4) 使用迴圈讓腳印環繞圖片</h4><pre><strong>var</strong> x = 40</pre><pre><strong>for</strong> _ <strong>in</strong> 0...7 {</pre><pre><strong>let</strong> pawLabel = UILabel(frame: CGRect(x: x, y: 30, width: 70, height: 70))</pre><pre>pawLabel.text = &quot;🐾&quot;</pre><pre>pawLabel.font = UIFont.systemFont(ofSize: 30)</pre><pre>x += 40</pre><pre>wolfImageView.addSubview(pawLabel)</pre><p>x += 40，每40新增一個腳印。</p><p><strong>#GitHub</strong></p><p><a href="https://github.com/korudo164/Card">GitHub - korudo164/Card</a></p><p><strong>#教學文章</strong></p><p><a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84%E8%A9%A6%E7%85%89-%E5%8B%87%E8%80%85%E7%9A%84-100-%E9%81%93-swift-ios-app-%E8%AC%8E%E9%A1%8C/142-%E4%BD%BF%E7%94%A8%E5%9C%96%E7%89%87-%E6%96%87%E5%AD%97-emoji-%E9%82%8A%E6%A1%86-%E5%9C%93%E8%A7%92%E8%A3%BD%E4%BD%9C%E6%BC%82%E4%BA%AE%E5%8D%A1%E7%89%87-401741bf23f7"># 142 使用圖片，文字，emoji，邊框 &amp; 圓角製作漂亮卡片</a></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=7a3a00b68398" width="1" height="1" alt=""><hr><p><a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4/3-%E7%94%A8%E7%B0%A1%E5%96%AE%E7%9A%84%E7%A8%8B%E5%BC%8F%E5%81%9A%E4%B8%80%E5%BC%B5%E7%B0%A1%E5%96%AE%E7%9A%84%E5%8D%A1%E7%89%87%E5%90%A7-7a3a00b68398">#3 用簡單的程式做一張簡單的卡片吧</a> was originally published in <a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4">彼得潘的 Swift iOS App 開發教室</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[#2 去背圖片＆國旗製作]]></title>
            <link>https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4/2-%E5%8E%BB%E8%83%8C%E5%9C%96%E7%89%87-%E5%9C%8B%E6%97%97%E8%A3%BD%E4%BD%9C-1eb59fa43b9b?source=rss-ebd4814c8620------2</link>
            <guid isPermaLink="false">https://medium.com/p/1eb59fa43b9b</guid>
            <category><![CDATA[ios-app-development]]></category>
            <category><![CDATA[swift]]></category>
            <category><![CDATA[learning-to-code]]></category>
            <dc:creator><![CDATA[阿姆 The Program Beginner]]></dc:creator>
            <pubDate>Sat, 23 Jul 2022 15:52:30 GMT</pubDate>
            <atom:updated>2022-07-28T07:17:17.835Z</atom:updated>
            <content:encoded><![CDATA[<h3>布丁狗去背</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/746/1*pkA2nuqhlSird0Z82yiLvQ.png" /></figure><blockquote>程式</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*zK7KTHy9j3ohbxaiHOjW9Q.png" /></figure><h4>(1) 將圖片去背</h4><p>使用Mac的內建程式 Preview app 的魔術棒工具點選空白的地方即可去背。</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/986/1*J64qCsEmpVNBsBgoqXfdXg.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*JIPrH6Rq_pP9hbYVKzqy3g.png" /></figure><h4><em>(2) 將格紋圖的位置大小設為與布丁狗圖的一致</em></h4><pre>patternImageView.frame = pudinImageView.frame</pre><h4><em>(3) 將布丁狗圖片疊在格紋圖片上</em></h4><pre>patternImageView.addSubview(pudinImageView)</pre><p>pudinImageView成為了patternImageView的Subview</p><h4><em>(4) 顯示結果</em></h4><pre>patternImageView</pre><p>因為patternImageView上裝著pudinImageView，必須從patternImageView觀看才能同時看到格紋圖跟布丁狗，如果輸入pudinImageView，則只能看見布丁狗的圖片，而看不見背後的格紋圖。</p><h3>國旗製作</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/396/1*6NK_MO9--pkuZLy-d0W-FA.png" /></figure><p>繼續運用Subview來畫一張芬蘭的國旗。</p><blockquote>程式</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*YofqiUcTKHatVXncCXTATg.png" /></figure><p>說明：將 blueView 及 BlueView（本人取名比較懶，兩條藍條只改字首🤣）放到 backgroungView 上，兩條藍條成為了backgroungView的SubView。</p><p><em>point</em>：橫藍條的 y 軸位置因要設定在底圖的正中央，並且藍條高度為30，所以程式應寫為 (底圖-30) / 2</p><p><em>point</em>：UIColor 數值滿條為255，可上網查完RGB色號後，套進UIColor，如：20/255，而alpha則為透明度，數值1為不透明</p><p><strong>#彼得潘的教學文章</strong></p><ul><li><a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4/%E5%BE%9E-playground-%E8%AA%BF%E8%89%B2%E5%8E%BB%E8%83%8C%E5%9C%96%E7%89%87-727d0d73bb59">從 playground 調色去背圖片</a></li><li><a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84%E8%A9%A6%E7%85%89-%E5%8B%87%E8%80%85%E7%9A%84-100-%E9%81%93-swift-ios-app-%E8%AC%8E%E9%A1%8C/43-%E5%BE%9E%E7%A8%8B%E5%BC%8F%E8%A3%BD%E4%BD%9C%E5%9C%8B%E6%97%97%E5%9C%96%E6%A1%88-b3a1a913fe2e">#43 從程式製作國旗圖案</a></li></ul><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=1eb59fa43b9b" width="1" height="1" alt=""><hr><p><a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4/2-%E5%8E%BB%E8%83%8C%E5%9C%96%E7%89%87-%E5%9C%8B%E6%97%97%E8%A3%BD%E4%BD%9C-1eb59fa43b9b">#2 去背圖片＆國旗製作</a> was originally published in <a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4">彼得潘的 Swift iOS App 開發教室</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[#1 萬事皆有個開始]]></title>
            <link>https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4/1-%E8%90%AC%E4%BA%8B%E7%9A%86%E6%9C%89%E5%80%8B%E9%96%8B%E5%A7%8B-601f8de6dc7a?source=rss-ebd4814c8620------2</link>
            <guid isPermaLink="false">https://medium.com/p/601f8de6dc7a</guid>
            <category><![CDATA[first-post]]></category>
            <category><![CDATA[swift]]></category>
            <category><![CDATA[ios]]></category>
            <category><![CDATA[learning-to-code]]></category>
            <dc:creator><![CDATA[阿姆 The Program Beginner]]></dc:creator>
            <pubDate>Thu, 21 Jul 2022 15:09:05 GMT</pubDate>
            <atom:updated>2022-07-24T08:01:53.131Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*qjQ0_XUzw92x_KwU" /><figcaption>Photo by <a href="https://unsplash.com/@christinhumephoto?utm_source=medium&amp;utm_medium=referral">Christin Hume</a> on <a href="https://unsplash.com?utm_source=medium&amp;utm_medium=referral">Unsplash</a></figcaption></figure><p>明明是個文組生，怎麼會突然想要來學程式呢？這一切可能都是個意外……</p><p>或許是自己的伴侶讀資工，平常看著她coding，或許是自己本身就是個 3C 愛好者，尤其更是蘋果產品愛好者，居然天馬行空想著自己也能寫個 app 來用！</p><p>雖然拋棄學業（？）不是我的本意，但非自己所喜歡的也是事實，所以辦了休學，報名了政府辦的 iOS App 程式與網頁設計的職訓課程，從開課到現在也不知不覺度過了一個月，但又或許是自己慧根實在不足，進度居然完全跟不上，實在太挫折了。</p><p>但也不行就這樣繼續下去啊！隨著新的課程進度展開，辦了新的 Medium 帳號，試著從現在開始努力追上，然後寫點文章記錄下來，距離結訓還剩下五個月，究竟能不能順利完成課程，成為真正的新米工程師呢？目標是每週至少寫出一篇文章，嚴格執行擠出當週的學習狀況或是作品。</p><p>加油吧！阿姆，衝啊！</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*IoN9DMhsFdXYFmI7" /><figcaption>Photo by <a href="https://unsplash.com/@belart84?utm_source=medium&amp;utm_medium=referral">Artem Beliaikin</a> on <a href="https://unsplash.com?utm_source=medium&amp;utm_medium=referral">Unsplash</a></figcaption></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=601f8de6dc7a" width="1" height="1" alt=""><hr><p><a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4/1-%E8%90%AC%E4%BA%8B%E7%9A%86%E6%9C%89%E5%80%8B%E9%96%8B%E5%A7%8B-601f8de6dc7a">#1 萬事皆有個開始</a> was originally published in <a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E6%95%99%E5%AE%A4">彼得潘的 Swift iOS App 開發教室</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
    </channel>
</rss>